name: 'Lori Books CI/CD Workflow - Deploy'
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: release-v0.0.3
          release_name: Release release-v0.0.3
          body: |
            Changes in this Release
            - Use static DB subnet_group
            - Bump up release version
          draft: false
          prerelease: false
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: vitr/actions-build-and-upload-to-ecs@master
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: loribooks
          region: us-east-1
          tags: latest,${{ github.sha }}
          create_repo: true
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: Terraform Init
        uses: Yellow-Box-Software/terraform-action@v2.5
        with:
          args: "init terraform"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Terraform Apply
        uses: Yellow-Box-Software/terraform-action@v2.5
        with:
          args: "apply -auto-approve -var-file=terraform/testing.tfvars terraform"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
